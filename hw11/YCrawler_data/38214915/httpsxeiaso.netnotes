<!DOCTYPE html>
<html lang="en">

    <head>
        <!--
MMMMMMMMMMMMMMMMMMNmmNMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMNmmmd.:mmMM
MMMMMMMMMMMMMMMMMNmmmNMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMNmmydmmmmmNMM
MMMMMMMMMMMMMMMMNm/:mNMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMNmms /mmmmmMMM
MMMMMMMMMMMMMMMNmm:-dmMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMNmmmmdsdmmmmNMMM
MMMMMMMMMMMMMMMmmmmmmmNMMMMMMMMMMMNmmdhhddhhmNNMMMMMMMMMMMMMMMMNmy:hmmmmmmmmMMMM
MMMMMMMMMMMMMMNm++mmmmNMMMMMMmdyo/::.........-:/sdNMMMMMMMMMMNmmms`smmmmmmmNMMMM
MMMMMMMMMMMMMMmd.-dmmmmMMmhs/-....................-+dNMMMMMMNmmmmmmmmmmmmmmMMMMM
MMMMMMMMMMMMMNmmmmmmmmho:-...........................:sNMMNmmmmmmmmmmmmmmmNMNmdd
MMMMMMMMMMMMNmd+ydhs/-.................................-sNmmmmmmmmmmmmmmmdhyssss
MMMMMMMMMMMNNh+`........................................:dmmmmmmmmmmmmmmmyssssss
MMMMNNdhy+:-...........................................+dmmmmmmmmmmmmmmmdsssssss
MMMN+-...............................................-smmmmmmmmmmmmmmmmmysyyhdmN
MMMMNho:::-.--::-.......................----------..:hmmmmmmmmmmmmmmmmmmmNMMMMMM
MMMMMMMMNNNmmdo:......................--------------:ymmmmmmmmmmmmmmmmmmmMMMMMMM
MMMMMMMMMMds+........................-----------------+dmmmmmmmmmmmmmmmmmMMMMMMM
MMMMMMMMMh+........................--------------------:smmmmmmmmmmmmmmNMMMMMMMM
MMMMMMMNy/........................-------------::--------/hmmmmmmmmmmmNMMMMMMNmd
MMMMMMMd/........................--------------so----------odmmmmmmmmMMNmdhhysss
MMMMMMm/........................--------------+mh-----------:ymmmmdhhyysssssssss
MMMMMMo.......................---------------:dmmo------------+dmdysssssssssssss
yhdmNh:......................---------------:dmmmm+------------:sssssssssssyhhdm
sssssy.......................--------------:hmmmmmmos++:---------/sssyyhdmNMMMMM
ssssso......................--------------:hmmmNNNMNdddysso:------:yNNMMMMMMMMMM
ysssss.....................--------------/dmNyy/mMMd``d/------------sNMMMMMMMMMM
MNmdhy-...................--------------ommmh`o/NM/. smh+-----------:yNMMMMMMMMM
MMMMMN+...................------------/hmmss: `-//-.smmmmd+----------:hMMMMMMMMM
MMMMMMd:..................----------:smmmmhy+oosyysdmmy+:.  `.--------/dMMMMMMMM
MMMMMMMh-................---------:smmmmmmmmmmmmmmmh/`      `/s:-------sMMMMMMMM
MMMMMMMms:...............-------/ymmmmmmmmmmmmmmmd/        :dMMNy/-----+mMMMMMMM
MMMMMMmyss/..............------ommmmmmmmmmmmmmmmd.       :yMMMMMMNs:---+mMMMMMMM
MMMMNdssssso-............----..odmmmmmmmmmmmmmmh:.`    .sNMMMMMMMMMd/--sMMMMMMMM
MMMmysssssssh/................`  -odmmmmmmmmmh+.     `omMMMMMMMMMMMMh/+mMMMMMMMM
MNdyssssssymMNy-..............     `/sssso+:.      `+mMMMMMMMMMMMMMMMdNMMMMMMMMM
NhssssssshNMMMMNo:............/.`                `+dMMMMMMMMMMMMMMMMMMMMMMMMMMMM
ysssssssdMMMMMMMMm+-..........+ddy/.`          -omMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM
ssssssymMMMMMMMMMMMh/.........-oNMMNmy+--` `-+dNMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM
ssssydNMMMMMMMMMMMMMNy:........-hMMMMMMMNmdmMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM
sssymMMMMMMMMMMMMMMMMMm+....-..:hMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM
symNMMMMMMMMMMMMMMMMMMMNo.../-/dMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM
dNMMMMMMMMMMMMMMMMMMMMMMh:.:hyNMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM
la budza pu cusku lu
  <<.i do snura .i ko kanro
    .i do panpi .i ko gleki>> li'u
-->
        <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
        <meta name="go-import" content="xeiaso.net/v4 git https://github.com/Xe/site"/>

        <link rel="stylesheet" href="https://cdn.xeiaso.net/static/pkg/iosevka/family.css"/>
        <link rel="stylesheet" href="/styles.css"/>

        <link rel="alternate" type="application/rss+xml" href="https://xeiaso.net/blog.rss"/>
        <link rel="alternate" type="application/json" href="https://xeiaso.net/blog.json"/>

        <link rel="apple-touch-icon" sizes="180x180" href="/static/favicon/apple-icon-180x180.png" />
        <link rel="icon" type="image/png" sizes="192x192" href="/static/favicon/android-icon-192x192.png" />
        <link rel="icon" type="image/png" sizes="32x32" href="/static/favicon/favicon-32x32.png" />
        <link rel="icon" type="image/png" sizes="96x96" href="/static/favicon/favicon-96x96.png" />
        <link rel="icon" type="image/png" sizes="16x16" href="/static/favicon/favicon-16x16.png" />
        <link rel="icon" href="/favicon.ico?v=2" />
        <link rel="manifest" href="/static/manifest.json" />
        <meta name="theme-color" content="#ffffff" />

        <link rel="canonical" href="https://xeiaso.net//notes/cursorless-alien-magic/" />

        
            <title>Cursorless is alien magic from the future - Xe Iaso</title>
            <meta property="og:title" content="Cursorless is alien magic from the future - Xe Iaso"/>
            <meta property="twitter:title" content="Cursorless is alien magic from the future - Xe Iaso"/>
        

        
    </head>

    <body class="px-4 py-2 mx-auto bg-bg-hard dark:bg-bgDark-hard text-fg-0 dark:text-fgDark-0 lg:max-w-5xl max-w-xl">
        <header>
            <nav
            class="flex flex-wrap items-center w-full py-4 md:py-0 px-4 text-lg text-fg-1 dark:text-fgDark-1 bg-bg-soft dark:bg-bgDark-soft">
                <div class="p-2 flex flex-wrap items-center flex-shrink-0 mr-6">
                    <svg class="w-4 h-8 sm:w-8 sm:h-16" width="19in" height="32in" viewBox="0 0 1824 3071.9999" version="1.1"
                        id="svg5">
                        <defs id="defs2"/>
                        <path class="fill-fg-0 dark:fill-fgDark-0"
                            d="m 592.18308,3060.7011 c -76.2316,-11.0983 -139.83646,-39.7786 -194.68341,-87.7738 -33.44576,-29.2645 -51.41233,-57.2925 -67.49316,-105.2975 -16.44493,-49.0758 -21.298,-90.0129 -17.07384,-144.0051 7.92457,-101.2767 32.6718,-154.6166 102.83925,-221.6542 29.92936,-28.5927 46.67803,-39.321 89.29351,-57.2146 l 35.52619,-14.9243 46.94576,0.9736 c 112.21535,1.947 188.5151,-17.7475 252.19882,-65.1392 64.74974,-48.1802 88.45529,-92.8946 97.91219,-184.6696 4.53667,-43.994 2.13204,-135.5354 -4.34196,-165.1795 -9.52116,-43.6241 -35.36751,-82.5362 -59.05846,-88.9226 -12.8964,-3.5047 -19.80654,-9.5406 -19.80654,-17.5139 0,-10.0566 5.52967,-16.5111 15.77417,-18.429 5.48099,-1.0709 9.2583,-3.0179 8.39186,-4.3809 -0.87618,-1.3629 -0.29206,-2.5312 1.25586,-2.5312 5.22787,0 11.83914,-8.9565 11.83914,-16.0243 0,-4.965 2.27807,-7.8856 7.88563,-10.1345 4.33222,-1.7524 10.15396,-4.2836 12.93145,-5.7439 10.69037,-5.5491 30.68092,-11.1177 65.17225,-18.2829 35.87671,-7.3989 105.81441,-26.8306 146.17711,-40.5185 68.8055,-23.3356 166.225,-113.2123 186.459,-172.0332 15.1686,-44.0816 13.6518,-117.6418 -3.3879,-164.352 -13.4474,-36.8677 -47.4384,-85.009 -73.5505,-104.1778 -28.7952,-21.1355 -81.4147,-41.6575 -118.7848,-46.3305 -13.1826,-1.655 -19.4745,0 -45.2975,8.5671 -35.0268,12.247 -123.30589,34.1223 -155.59411,38.5325 -12.33175,1.655 -33.12352,3.0179 -46.20587,3.0179 -13.08137,0 -42.97568,2.0444 -66.432,4.5756 -86.54911,9.3459 -161.61539,0 -217.01433,-28.0864 -13.16802,-6.6201 -24.20595,-9.2486 -51.88644,-12.4807 -47.89495,-5.6465 -78.57489,-11.6922 -102.92979,-20.4345 -62.86595,-22.5665 -111.13376,-60.9919 -157.86047,-125.6735 -12.49336,-17.2997 -30.75004,-42.5337 -40.5691,-56.0658 -29.28585,-40.3919 -40.65575,-66.8234 -54.12946,-125.85848 -13.69081,-59.98916 -16.94436,-91.5706 -16.54618,-160.59415 0.993,-173.37665 28.47392,-290.59986 100.07149,-426.98223 23.85061,-45.43482 45.29951,-76.73394 80.92111,-118.07992 C 431.93161,181.4746 558.05682,97.663072 703.97008,45.773716 750.65201,29.174963 779.30798,22.000019 832.31495,13.647098 860.49486,9.168842 973.25248,6.5403005 1010.1854,9.4609021 c 116.7219,9.2485719 207.722,47.4500419 282.3453,118.6056379 51.9614,49.54314 100.2506,137.11251 136.0738,246.76163 21.921,67.10569 28.7659,98.19063 37.8724,171.97476 2.5312,20.49289 8.4697,65.63566 13.204,100.32267 14.5582,106.67984 14.124,164.37146 -1.8302,243.62685 -14.3918,71.4866 -29.6607,112.23875 -62.4386,166.63975 -40.3832,67.0279 -78.4493,105.6479 -159.2108,161.5191 -14.454,9.9981 -26.2649,18.9352 -26.2455,19.8503 0.029,0.9735 8.8397,5.2571 19.609,9.638 74.6943,30.2282 134.7526,95.4453 163.3852,177.4265 12.1974,34.9207 17.7329,64.3117 19.6138,104.139 3.0082,63.7567 -7.9245,108.4906 -37.8179,154.7821 -28.5761,44.2277 -108.8985,117.8852 -163.3921,149.8269 -48.1286,28.213 -119.7388,55.4135 -187.0207,71.029 -17.7349,4.0889 -32.2444,8.5671 -32.2444,9.823 0,1.2656 4.3906,13.756 9.7567,27.7068 21.5823,56.1144 28.768,114.6822 26.7859,218.3247 -1.4409,75.0692 -4.5659,98.2977 -17.7914,132.0501 -28.2753,72.1486 -109.97134,140.5783 -225.08685,188.5346 -66.17402,27.5704 -119.65024,38.8732 -207.98383,43.9842 -28.29284,1.655 -54.36603,3.6021 -57.93987,4.3809 -3.57287,0.9736 -14.36352,9.4433 -23.97619,19.2663 -45.90602,46.8756 -67.61193,97.7622 -74.38578,174.3794 -3.76758,42.631 -0.87618,73.161 10.70692,111.4599 9.87845,32.7691 17.436,44.7144 44.2257,69.9192 59.00589,55.5011 110.54964,74.8744 198.97086,74.7674 45.46695,-0.059 46.37526,0 106.04996,-14.8659 103.34744,-25.4287 106.96509,-25.4871 120.24312,-1.7524 9.87358,17.6599 10.67383,27.8334 2.28781,29.0211 -3.54367,0.9735 -6.4448,2.1418 -6.4448,3.5047 0,3.6994 -21.4304,14.1941 -28.89838,14.1941 -3.40737,0 -33.4477,8.9565 -66.75327,19.9964 -33.30654,10.9912 -73.45508,22.732 -89.21854,26.081 -36.10448,7.6909 -103.40877,9.7743 -140.44492,4.3809 z M 815.74832,1243.1912 c 52.81129,-11.1372 162.32217,-82.176 187.74698,-121.7988 21.189,-33.0223 29.537,-69.1307 29.8125,-128.96407 0.1947,-37.92888 -0.7788,-47.70316 -6.2403,-66.78442 -8.6547,-30.03352 -20.1366,-51.73359 -37.70985,-71.30162 -31.08299,-34.5994 -69.45191,-57.1075 -119.17613,-69.89974 -24.20497,-6.23061 -33.51682,-7.20415 -60.16634,-6.32797 -35.87862,1.07089 -50.94697,6.42533 -80.47231,28.22275 -34.06298,25.15612 -57.37327,55.49143 -80.21335,104.36283 -17.96365,38.44486 -22.72131,54.44002 -34.62568,116.44444 -9.15122,47.6642 -10.70693,61.5662 -10.86853,97.1781 -0.0974,22.8586 1.59659,52.5222 3.77731,65.918 3.7189,22.8099 4.76058,25.1269 16.32324,36.3517 14.19023,13.7658 15.63009,14.0871 78.59144,17.7281 64.74098,3.6994 91.50538,3.5047 113.21615,-1.0709 z m 223.45618,-17.1926 c 18.8574,-2.3365 44.7787,-4.2836 57.604,-4.2836 23.2023,0 23.4359,-0.078 47.4014,-15.1579 64.705,-40.7132 119.7719,-84.3372 139.521,-110.535 66.9334,-88.7668 106.7451,-214.20669 103.0817,-324.78067 -2.0347,-61.41051 -27.3991,-240.70625 -42.6924,-301.78577 -25.1756,-100.53684 -75.0828,-196.79987 -130.473,-251.65851 -52.0919,-51.58756 -120.3716,-88.81549 -188.2591,-102.64941 -24.7258,-5.06238 -39.04743,-5.8412 -100.60398,-5.6465 -142.14666,0 -175.94581,5.93856 -243.31533,39.88569 -93.61891,47.21639 -146.75536,84.47353 -206.80001,144.97866 -46.12701,46.47651 -64.57451,70.07497 -90.87939,116.25942 -74.37994,130.57037 -100.74226,237.61042 -100.95352,409.8675 -0.0876,71.5158 2.50198,94.92929 17.25784,156.21325 9.5601,39.69094 21.66015,62.52034 58.56974,110.51554 48.26002,62.754 82.45443,94.9683 122.87166,115.7824 9.37513,4.8677 9.65746,4.7703 7.71039,0 -1.10983,-2.9206 -2.73563,-24.6304 -3.60208,-48.297 -1.47003,-40.0415 -0.87618,-47.6253 8.99546,-108.9677 5.82173,-36.2544 12.37167,-73.65753 14.56504,-83.12027 10.06731,-43.39041 32.86748,-97.72334 55.92368,-133.27679 23.19639,-35.7579 78.29159,-83.50974 121.43764,-105.23902 22.62882,-11.39034 77.06787,-29.91669 113.12172,-38.49353 26.46747,-6.32797 73.99052,-7.49621 100.19319,-2.53119 39.68026,7.49622 87.11765,22.85858 108.48765,35.0667 37.5541,21.44695 79.6234,65.93745 98.3717,104.02209 39.4214,80.07316 45.3648,203.72171 13.0473,271.42121 -10.0634,21.0868 -59.1811,82.9354 -78.0891,98.3367 -8.5963,7.0094 -23.9411,18.1077 -34.0912,24.6791 -10.151,6.5227 -18.45524,12.3931 -18.45524,12.9675 0,2.0444 16.12074,0.9735 50.05034,-3.3101 z m 512.7662,1748.535 c -3.4269,-2.4338 -9.3654,-3.6021 -13.9313,-2.7259 -9.1902,1.655 -21.5005,-7.8856 -21.5005,-16.628 0,-8.1776 9.7889,-25.6818 39.8273,-71.0971 15.1404,-22.8878 37.8471,-58.782 50.4582,-79.7617 80.9114,-134.6008 119.4478,-185.8476 150.5931,-200.2462 7.6325,-3.5047 20.6671,-6.4253 31.5288,-7.0094 l 18.5137,-0.9735 4.2154,16.6571 c 3.7092,14.6517 3.7092,17.436 0,23.1799 -2.317,3.602 -15.3399,23.1798 -28.9373,43.5364 -13.5973,20.3566 -39.6705,63.0753 -57.9418,94.9488 -79.6224,138.894 -126.5964,209.0274 -133.2856,199 -1.9957,-3.0179 -3.9525,-3.1153 -8.5281,-0.9735 -4.7801,2.5312 -6.4643,2.2391 -8.606,-1.5577 -2.4047,-4.2835 -3.1738,-4.1862 -7.9538,1.363 -6.2696,7.3015 -6.7369,7.3988 -14.4424,2.0444 z m -208.311,-45.6587 c -24.4357,-9.0539 -27.366,-19.9964 -13.0229,-48.4042 10.7896,-21.3788 15.4665,-27.8138 52.5854,-72.2946 57.9077,-69.3935 254.7631,-270.8566 264.663,-270.8566 3.164,0 6.1819,-1.1682 6.7076,-2.5312 0.4868,-1.3629 8.9663,-3.4073 18.7493,-4.3809 20.8852,-2.0444 23.7659,0.9736 23.7659,22.7028 0,15.9076 -5.4323,23.5206 -63.49,88.9616 -101.889,114.8478 -190.0834,223.2994 -213.1464,262.124 -6.0846,10.2415 -12.436,19.5777 -14.1095,20.7362 -4.8579,3.4074 -7.3404,2.5312 -7.3404,-2.4338 0,-3.6021 -1.0904,-3.31 -5.0721,1.655 -6.5811,8.0803 -34.1886,10.7284 -50.2938,4.673 z M 124.99001,2282.02 c -58.061563,-9.7451 -98.154609,-48.3749 -112.086852,-107.9941 -5.9677632,-25.5455 -4.1180488,-44.2763 6.600559,-66.8136 16.825586,-35.3588 69.393496,-86.995 108.640543,-106.7091 45.92062,-23.063 107.67577,-37.5103 132.15333,-30.9194 34.47381,9.2485 63.12199,51.2078 79.40726,116.2204 l 6.4448,25.7111 10.61833,-14.2428 c 14.16784,-19.0131 45.61396,-83.169 54.70482,-111.6157 24.11443,-75.4391 43.2765,-226.0838 39.75036,-312.5044 -1.58686,-38.9219 -8.05112,-88.796 -16.67956,-128.7011 -8.66445,-40.0707 -8.99545,-55.6765 -1.49924,-70.3671 7.37939,-14.457 27.3271,-30.6176 40.94392,-33.1585 5.92882,-1.1683 11.48575,-3.2127 12.35025,-4.5756 2.33648,-3.7968 14.41998,-3.1154 17.83514,1.0708 3.44631,4.1862 25.94565,61.0893 34.59063,87.5305 29.82713,91.2298 38.68142,225.266 22.40296,339.1402 -12.61505,88.2411 -27.56269,137.0541 -61.34042,200.3144 -21.75848,40.7521 -38.03013,63.0266 -68.07728,93.1672 -46.36747,46.5251 -87.83612,73.6867 -153.41239,100.5076 -54.37868,22.2355 -110.93905,31.0655 -153.34229,23.9489 z m 97.99105,-92.7875 c 28.07282,-4.965 41.90966,-11.2541 39.92755,-18.2246 -0.77883,-2.7259 -3.3587,-12.8604 -5.78279,-22.6249 -6.52268,-26.3438 -19.7608,-53.3983 -36.32061,-74.2125 -18.27712,-22.9657 -21.19188,-24.6012 -35.28865,-19.753 -13.90109,4.7703 -27.03407,17.3873 -44.09525,42.339 -11.71453,17.1342 -13.45131,21.6514 -14.47158,37.6758 l -1.1585,18.205 12.49628,12.1887 c 13.55743,13.2303 42.56874,28.544 54.05644,28.544 3.94281,-0.01 17.72708,-1.8497 30.63516,-4.0888 z m 21.90451,-396.9487 c -13.61876,-6.1333 -18.18853,-12.8993 -18.04347,-26.5094 0.0974,-12.5001 4.30302,-19.5193 23.02407,-38.7466 14.88339,-15.2845 39.43202,-29.5078 50.93043,-29.5078 2.80378,0 7.6033,-1.8497 10.66604,-4.1862 13.99065,-10.5726 24.80077,-2.3365 36.65939,27.8917 8.38212,21.3788 9.17069,28.0962 4.3809,37.4129 -4.14725,8.0804 -17.15367,22.0311 -20.5328,22.0311 -1.44083,0 -6.67845,1.8497 -11.64444,4.0889 -32.72924,14.934 -54.37382,17.0855 -75.44012,7.4962 z"
                            id="logo"
                            sodipodi:nodetypes="csssssccsssssccsscccssssscssscscssscsssssssscsssccsssssssccssccscsccscsssscccsccscccssscsscccsssssssssssscsscsccssscsssssscccsssssscsssssccsccsssscsssssscsscssssscssssscscsssssccsccsssccssssscsscssscss"/>
                    </svg>
                    <a class="hover:bg-white-500 flex flex-row items-center ml-2" href="/">
                        <span
                        class="text-xl tracking-tight">Xe</span>
                    </a>
                </div>
                <div class="flex items-center flex-shrink-0 mr-6">
                    <a href="/blog" class="text-fg-1 dark:text-fgDark-1">
                        <span class="text-xl tracking-tight">Blog</span>
                    </a>
                </div>
                <div class="flex items-center flex-shrink-0 mr-6">
                    <a href="/contact" class="text-fg-1 dark:text-fgDark-1">
                        <span class="text-xl tracking-tight">Contact</span>
                    </a>
                </div>
                <div class="flex items-center flex-shrink-0 mr-6">
                    <a href="/resume" class="text-fg-1 dark:text-fgDark-1">
                        <span class="text-xl tracking-tight">Resume</span>
                    </a>
                </div>
                <div class="flex items-center flex-shrink-0 mr-6">
                    <a href="/talks" class="text-fg-1 dark:text-fgDark-1">
                        <span class="text-xl tracking-tight">Talks</span>
                    </a>
                </div>
                <div class="flex items-center flex-shrink-0 mr-6">
                    <a href="/vods" class="text-fg-1 dark:text-fgDark-1">
                        <span class="text-xl tracking-tight">VODs</span>
                    </a>
                </div>
                <div class="mx-auto"></div>
                <div class="flex items-center flex-shrink-0 mr-6">
                    <a href="/signalboost" class="ml-6 text-fg-1 dark:text-fgDark-1">
                        <span class="text-xl tracking-tight">Signalboost</span>
                    </a>
                </div>
            </nav>
        </header>

        <!--
        <div id="sticky-banner" tabindex="-1" class="flex justify-between w-full p-4 border-b border-fg-2 bg-bg-0 dark:bg-bgDark-0 dark:border-fg-2">
            <div class="flex items-center mx-auto">
                <p class="flex items-center font-normal">
                    <span class="inline-flex p-1 mr-3 bg-bg-1 rounded-full dark:bg-bgDark-1 w-6 h-6 items-center justify-center">
                        <svg xmlns="http://www.w3.org/2000/svg" class="icon icon-tabler icon-tabler-exclamation-mark" width="24" height="24" viewBox="0 0 24 24" stroke-width="2" stroke="currentColor" fill="none" stroke-linecap="round" stroke-linejoin="round">
                            <path stroke="none" d="M0 0h24v24H0z" fill="none"></path>
                            <path d="M12 19v.01"></path>
                            <path d="M12 15v-10"></path>
                        </svg>
                        <span class="sr-only">Exclamation</span>
                    </span>
                    <span>Xe is now available for employment. Should you or your company be interested, please <a href="/contact/" class="underline">contact Xe</a> for more information. Remote positions only. Must hire in Canada.</span>
                </p>
            </div>
        </div>
        -->

        <div class="mt-4 p-2">
            <script async src="https://media.ethicalads.io/media/client/ethicalads.min.js"></script>
<div data-ea-publisher="christinewebsite" data-ea-type="text" data-ea-style="fixedfooter"></div>


<article class="prose dark:prose-invert max-w-none">
    <h1>Cursorless is alien magic from the future</h1>
    <p class="text-sm text-fg-3 dark:text-fgDark-3">
        Published on 11/09/2023, 1396 words, 6 minutes to read
    </p>

    

    <p>Just in time for me to start a new job at a new place, my RSI has decided to flare up.</p>
<div class="my-4 flex space-x-4 rounded-md border border-solid border-fg-4 bg-bg-2 p-3 dark:border-fgDark-4 dark:bg-bgDark-2 max-w-full min-h-fit"><div class="flex max-h-16 shrink-0 items-center justify-center self-center"><img style="max-height:6rem" alt="Cadey is coffee" loading="lazy" src="https://cdn.xeiaso.net/sticker/cadey/coffee/64"/></div><div class="convsnippet min-w-0 self-center">&lt;<a href="/characters#cadey"><b>Cadey</b></a>> <p>For the record, I'm fine, I've known this has been coming for a while. The
flare-up is on its exit anyways. I've gotten lucky and I'm going to be fine.
But it's still a bit of a bummer.</p></div></div>
<p>The last time this happened, I was able to get by by doing mostly writing about technology things, but I think I'm going to need to be able to program again. I know I'm a bit of an emacs user, but for this I've been using visual studio code because of one extension in particular: <a href="https://marketplace.visualstudio.com/items?itemName=pokey.cursorless">Cursorless</a>.</p>
<p>Cursorless is a plugin that integrates with voice control software to let you do AST level code editing with your voice. This is crazy alien magic from the future.</p>
<p>I've talked about cursorless before on my blog, but I have decided to really get deep into it this time around. The last time I used it, I didn't actually use it for much more than moving around the screen, but this time I'm going to try to use it for everything.</p>
<p>I wish I had this as an input method for slack and discord messages.</p>
<p>The most magic parts about this are the ideas of destinations and targets when it comes to cursorless inputs. Targets are individual anchors in a document and destinations are places relative to individual targets. Every single token in a document is given a hat over a letter with a color. These hats act as anchors that let you give commands based off of locations, destinations, and paths between them. Here's a simple example. Consider this code:</p>
<pre class="language-js"><code class="language-js code-highlight"><span class="code-line"><span class="token keyword">function</span> <span class="token function">fetchBlog</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
</span><span class="code-line">  <span class="token function">fetch</span><span class="token punctuation">(</span><span class="token string">&quot;https://xeiaso.net/blog.json&quot;</span><span class="token punctuation">)</span>
</span><span class="code-line">    <span class="token punctuation">.</span><span class="token method function property-access">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">response</span><span class="token punctuation">)</span> <span class="token arrow operator">=></span> <span class="token punctuation">{</span>
</span><span class="code-line">      <span class="token keyword control-flow">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>response<span class="token punctuation">.</span><span class="token property-access">ok</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
</span><span class="code-line">        <span class="token keyword control-flow">throw</span> <span class="token keyword">new</span> <span class="token class-name">Error</span><span class="token punctuation">(</span><span class="token string">&quot;Network response was not ok&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</span><span class="code-line">      <span class="token punctuation">}</span>
</span><span class="code-line">      <span class="token keyword control-flow">return</span> response<span class="token punctuation">.</span><span class="token method function property-access">json</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</span><span class="code-line">    <span class="token punctuation">}</span><span class="token punctuation">)</span>
</span><span class="code-line">    <span class="token punctuation">.</span><span class="token method function property-access">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">data</span><span class="token punctuation">)</span> <span class="token arrow operator">=></span> <span class="token console class-name">console</span><span class="token punctuation">.</span><span class="token method function property-access">log</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">)</span>
</span><span class="code-line">    <span class="token punctuation">.</span><span class="token keyword control-flow">catch</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">error</span><span class="token punctuation">)</span> <span class="token arrow operator">=></span> <span class="token console class-name">console</span><span class="token punctuation">.</span><span class="token method function property-access">error</span><span class="token punctuation">(</span><span class="token string">&quot;Error:&quot;</span><span class="token punctuation">,</span> error<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</span><span class="code-line"><span class="token punctuation">}</span>
</span></code></pre>
<p>This is a fairly standard looking JavaScript function. But, cursorless puts a bunch of hats over all of the code so it may look something like this:</p>
<figure class="max-w-3xl mx-auto"><a href="https://cdn.xeiaso.net/file/christine-static/blog/2023/cl-note/cursorless-hats.jpg"><picture><source type="image/avif" srcset="https://cdn.xeiaso.net/file/christine-static/blog/2023/cl-note/cursorless-hats.avif"/><source type="image/webp" srcset="https://cdn.xeiaso.net/file/christine-static/blog/2023/cl-note/cursorless-hats.webp"/><img loading="lazy" src="https://cdn.xeiaso.net/file/christine-static/blog/2023/cl-note/cursorless-hats.jpg"/></picture></a></figure>
<div class="my-4 flex space-x-4 rounded-md border border-solid border-fg-4 bg-bg-2 p-3 dark:border-fgDark-4 dark:bg-bgDark-2 max-w-full min-h-fit"><div class="flex max-h-16 shrink-0 items-center justify-center self-center"><img style="max-height:6rem" alt="Aoi is wut" loading="lazy" src="https://cdn.xeiaso.net/sticker/aoi/wut/64"/></div><div class="convsnippet min-w-0 self-center">&lt;<a href="/characters#aoi"><b>Aoi</b></a>> <p>So that's why your editor is full of random video artifacts?</p></div></div>
<div class="my-4 flex space-x-4 rounded-md border border-solid border-fg-4 bg-bg-2 p-3 dark:border-fgDark-4 dark:bg-bgDark-2 max-w-full min-h-fit"><div class="flex max-h-16 shrink-0 items-center justify-center self-center"><img style="max-height:6rem" alt="Cadey is enby" loading="lazy" src="https://cdn.xeiaso.net/sticker/cadey/enby/64"/></div><div class="convsnippet min-w-0 self-center">&lt;<a href="/characters#cadey"><b>Cadey</b></a>> <p>They're not artifacts, they're targets!</p></div></div>
<p>Take a good look at that picture again:</p>
<figure class="max-w-3xl mx-auto"><a href="https://cdn.xeiaso.net/file/christine-static/blog/2023/cl-note/cursorless-hats.jpg"><picture><source type="image/avif" srcset="https://cdn.xeiaso.net/file/christine-static/blog/2023/cl-note/cursorless-hats.avif"/><source type="image/webp" srcset="https://cdn.xeiaso.net/file/christine-static/blog/2023/cl-note/cursorless-hats.webp"/><img loading="lazy" src="https://cdn.xeiaso.net/file/christine-static/blog/2023/cl-note/cursorless-hats.jpg"/></picture></a></figure>
<p>The hats are color coded above individual letters. The position tells you the name and the color tells you how to disambiguate it. For example, That word <code>function</code> would be referred to as <code>green urge</code> because the hat is green over the letter u. If I wanted to delete that word for some reason or if I wanted to move it somewhere else, I could use <code>green urge</code> as the target for that action.</p>
<p>By itself, this gives you some pretty powerful actions and effectively lets you do spoken vim motions. But, that is only thinking in terms of simple actions that you can do with your editor. The real power of cursorless comes in from not only the idea of paths (such as <code>green urge past green bat</code> to select the <code>function fetchBlog</code> in that screenshot), but the fact that cursorless knows what the AST of the language is doing. This means that you can do things across the entire function, like deleting it or moving it somewhere else. As an example, here are the lambdas of this function visualized separately (with the &quot;visualize lambdas&quot; command):</p>
<figure class="max-w-3xl mx-auto"><a href="https://cdn.xeiaso.net/file/christine-static/blog/2023/cl-note/cursorless-lambda.jpg"><picture><source type="image/avif" srcset="https://cdn.xeiaso.net/file/christine-static/blog/2023/cl-note/cursorless-lambda.avif"/><source type="image/webp" srcset="https://cdn.xeiaso.net/file/christine-static/blog/2023/cl-note/cursorless-lambda.webp"/><img loading="lazy" src="https://cdn.xeiaso.net/file/christine-static/blog/2023/cl-note/cursorless-lambda.jpg"/></picture></a></figure>
<p>These AST units are also targets. This means that I can do things like select the body of a definition and then work off of that. So if I want to refactor this into an asynchronous function, the refactoring becomes trivial:</p>
<p><img src="https://cdn.xeiaso.net/file/christine-static/blog/2023/cl-note/async-refactor.gif" alt="a gif of doing the process of refactoring a synchronous function to an async function by writing it all using talon commands"/></p>
<div class="my-4 flex space-x-4 rounded-md border border-solid border-fg-4 bg-bg-2 p-3 dark:border-fgDark-4 dark:bg-bgDark-2 max-w-full min-h-fit"><div class="flex max-h-16 shrink-0 items-center justify-center self-center"><img style="max-height:6rem" alt="Aoi is grin" loading="lazy" src="https://cdn.xeiaso.net/sticker/aoi/grin/64"/></div><div class="convsnippet min-w-0 self-center">&lt;<a href="/characters#aoi"><b>Aoi</b></a>> <p>That's pretty cool, but I don't think I'd be able to remember all of those
commands.</p></div></div>
<div class="my-4 flex space-x-4 rounded-md border border-solid border-fg-4 bg-bg-2 p-3 dark:border-fgDark-4 dark:bg-bgDark-2 max-w-full min-h-fit"><div class="flex max-h-16 shrink-0 items-center justify-center self-center"><img style="max-height:6rem" alt="Cadey is enby" loading="lazy" src="https://cdn.xeiaso.net/sticker/cadey/enby/64"/></div><div class="convsnippet min-w-0 self-center">&lt;<a href="/characters#cadey"><b>Cadey</b></a>> <p>After a while, they just become second nature like Vim commands do. I have
been forcing myself to use this over and over again for the past few days and
it's starting to become second nature. I'm introducing individual commands at
one of the time and building up into bigger and better things.</p></div></div>
<p>The real magic comes when you start writing your own commands with the full power of Cursorless and Talon. In that example I just showed you, I have a action for inserting <code>&quot;async &quot;</code> before the function definition. Here is the code for that:</p>
<pre><code class="code-highlight"><span class="code-line">[state] async &lt;user.cursorless_destination>:
</span><span class="code-line">    user.cursorless_insert(cursorless_destination, &quot;async&quot;)
</span></code></pre>
<p>You can break talon commands into two basic parts: patterns and captures. Patterns are the spoken words that you say and captures are the things that you want to extract out of what you say. In this case, the pattern is just the word <code>async</code> and the capture is the destination that you want to insert the word <code>async</code> before. The <code>&lt;user.cursorless_destination></code> capture is a special capture lets you specify if you want something before or after a target. Of course, this is just a very simple example and it can get way more intricate than this.</p>
<p>Here is the most complicated Talon rule I've written so far:</p>
<pre><code class="code-highlight"><span class="code-line">(method|meth) &lt;user.letter> [&lt;user.go_pointer>] [&lt;user.go_visibility>] &lt;user.text> [over] [&lt;user.go_visibility>] named &lt;user.text> [over]:
</span><span class="code-line">    user.go_method(go_pointer or &quot;&quot;, letter, go_visibility_1 or &quot;public&quot;, text_1, go_visibility_2 or &quot;public&quot;, text_2)
</span></code></pre>
<div class="my-4 flex space-x-4 rounded-md border border-solid border-fg-4 bg-bg-2 p-3 dark:border-fgDark-4 dark:bg-bgDark-2 max-w-full min-h-fit"><div class="flex max-h-16 shrink-0 items-center justify-center self-center"><img style="max-height:6rem" alt="Aoi is wut" loading="lazy" src="https://cdn.xeiaso.net/sticker/aoi/wut/64"/></div><div class="convsnippet min-w-0 self-center">&lt;<a href="/characters#aoi"><b>Aoi</b></a>> <p>What the heck is going on there?</p></div></div>
<p>This looks like a lot, but it is actually really simple. This lets you declare a method in Go. In Go, a method looks like this:</p>
<pre class="language-go"><code class="language-go code-highlight"><span class="code-line"><span class="token keyword">func</span> <span class="token punctuation">(</span>reciever <span class="token operator">*</span>Type<span class="token punctuation">)</span> <span class="token function">MethodName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
</span><span class="code-line">    <span class="token comment">// function body here or something</span>
</span><span class="code-line"><span class="token punctuation">}</span>
</span></code></pre>
<p>Pedantically, Go doesn't have methods in the traditional sense, it just has functions that take structs as the receiver (read: a hidden first argument but in a way that is namespaced to that struct in particular). Without something to automate writing this for you, you would have to say something like this:</p>
<blockquote>
<p>state funk args word reciever space star hammer type over go right space hammer method name args go right brack enter</p>
</blockquote>
<p>That's a lot of words to say. But, with this talon rule, you can just say:</p>
<blockquote>
<p>meth r raised type named method name over</p>
</blockquote>
<div class="my-4 flex space-x-4 rounded-md border border-solid border-fg-4 bg-bg-2 p-3 dark:border-fgDark-4 dark:bg-bgDark-2 max-w-full min-h-fit"><div class="flex max-h-16 shrink-0 items-center justify-center self-center"><img style="max-height:6rem" alt="Aoi is wut" loading="lazy" src="https://cdn.xeiaso.net/sticker/aoi/wut/64"/></div><div class="convsnippet min-w-0 self-center">&lt;<a href="/characters#aoi"><b>Aoi</b></a>> <p>That's still a lot of words.</p></div></div>
<div class="my-4 flex space-x-4 rounded-md border border-solid border-fg-4 bg-bg-2 p-3 dark:border-fgDark-4 dark:bg-bgDark-2 max-w-full min-h-fit"><div class="flex max-h-16 shrink-0 items-center justify-center self-center"><img style="max-height:6rem" alt="Cadey is enby" loading="lazy" src="https://cdn.xeiaso.net/sticker/cadey/enby/64"/></div><div class="convsnippet min-w-0 self-center">&lt;<a href="/characters#cadey"><b>Cadey</b></a>> <p>Well, yes, you're not going to be able to get over that. But this is at least
more efficient and it makes more sense. I'm not going to be able to get rid of
all of the words, but I can at least make it so that it's close to how I
conceptualize it in my head.</p></div></div>
<div class="my-4 flex space-x-4 rounded-md border border-solid border-fg-4 bg-bg-2 p-3 dark:border-fgDark-4 dark:bg-bgDark-2 max-w-full min-h-fit"><div class="flex max-h-16 shrink-0 items-center justify-center self-center"><img style="max-height:6rem" alt="Aoi is wut" loading="lazy" src="https://cdn.xeiaso.net/sticker/aoi/wut/64"/></div><div class="convsnippet min-w-0 self-center">&lt;<a href="/characters#aoi"><b>Aoi</b></a>> <p>I guess that makes sense, but what do you mean by raised? I don't think go has
raised types I know it has pointers but not &quot;raising&quot;. What is raising?</p></div></div>
<p>I'm glad you asked! This is something that I'm experimenting with to try to find a different way to explain the concept of pointers in Go. I think that one of the oversights in the Go language is that pointers use C-style syntax. This specifically has you use an <code>*</code> to lower a value from a pointer value to a normal value and <code>&amp;</code> to raise the value from a normal value into a pointer value.</p>
<p>Since I'm taking the opportunity to radically redesign the Talon bindings for Go, I want to try unifying the syntax of pointer values into the idea of raising and lowering to see how it makes it easier to understand Go programs. I don't know if this is a good idea, but you have to fuck around in order to find out.</p>
<p>Maybe some parts of our industry are actually good. I really hope that I get led into the <a href="https://githubnext.com/projects/copilot-voice/">GitHub copilot voice beta</a> soon, I want to compare how Talon does voice coding versus how copilot voice does it.</p>

    <button id="shareButton" type="button" class="rounded-md bg-white px-3.5 py-2.5 text-sm font-semibold text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 hover:bg-gray-50"> Share <svg
        xmlns="http://www.w3.org/2000/svg"
        class="icon icon-tabler icon-tabler-share-2 h-8 w-8"
        width=24
        height=24
        viewBox="0 0 24 24"
        stroke-width=2
        stroke="currentColor"
        fill="none"
        stroke-linecap="round"
        stroke-linejoin="round"
      >
            <path stroke="none" d="M0 0h24v24H0z" fill="none"/>
            <path d="M8 9h-1a2 2 0 0 0 -2 2v8a2 2 0 0 0 2 2h10a2 2 0 0 0 2 -2v-8a2 2 0 0 0 -2 -2h-1"/>
            <path d="M12 14v-11"/>
            <path d="M9 6l3 -3l3 3"/>
        </svg>
    </button>

    <script>
        const shareButton = document.getElementById("shareButton");
        function doShareButton() {
            console.log("got here");
            const shareData = {
                title: document.title,
                url: window.location.href
            };
            if (navigator.share && navigator.canShare(shareData)) {
                // console.log("(via navigator.share)");
                navigator
                    .share(shareData)
                    .then(() => {
                        console.log("Thanks for sharing!");
                    })
                    .catch(console.error);
                }
            else if (navigator.clipboard) {
                // console.log("(via navigator.clipboard)");
                navigator.clipboard.writeText(shareData.url)
                    .then(() => {
                        console.log("Thanks for sharing!");
                    })
                    .catch(console.error);
            }
            else {
                console.log("can't share directly, but feel free to copy the url from addressbar manually");
            }
        }
        shareButton.addEventListener("click", doShareButton);
    </script>

    <p class="mb-4">Facts and circumstances may have changed since publication. Please contact me before jumping to conclusions if something seems wrong or unclear.</p>

    <p class="mb-4">Tags: cursorless, vscode</p>
</article>
        </div>

        <footer class="p-1 bg-bg-soft dark:bg-bgDark-soft text-center text-fg-1 dark:text-fgDark-1 lg:text-left">
            <div
            class="flex items-center justify-center border-b-2 border-fg-3 dark:border-fgDark-3 lg:justify-between pb-1 mb-2">
                <p>Copyright 2012-2023 Xe Iaso (Christine Dodrill). Any and all opinions listed here are my own and
                not representative of any of my employers, past, future, and/or present.</p>
            </div>
            <div
            class="flex items-center justify-center border-b-2 border-fg-3 dark:border-fgDark-3 lg:justify-between pb-1 mb-2">
                <p>Like what you see? Donate on <a 
                    href="https://patreon.com/cadey">Patreon</a> like <a href="/patrons">these awesome people</a>!</p>
            </div>
            <div class="flex items-center justify-center border-fg-3 dark:border-fgDark-3 lg:justify-between">
                <p>Served by xesite v4 (/nix/store/hbfma2zzmqix0v1a78jl63s7i9vm98vc-xesite_v4-20231028/bin/xesite) with site version <a href="https://github.com/Xe/site/commit/78edfd198f62f1f37f91101c9c3cc91a301e9ff2">78edfd19</a>, source code available <a href="https://github.com/Xe/site">here</a>.</p>
            </div>
        </footer>
    </body>
